[0.1.1] 29/05/15 - Dalton
*Criado arquivo HEADER "mips.h" e fazendo as primeiras experiÃªncias com ele
	-algumas constantes definidas (testes com registros)
	-funcao xor - tabela verdade XOR (sem carry)
	-struct de uma instrucao tipo R
	-listagem dos 32 registros e seus valores em decimais (so comentarios)
	
*Criado arquivo filemanager.h para ler e escrever .txt - ainda vazio

[0.1.2] 30/05/15 - Dalton
* Criado no filemanager.h a funcao void readBinary ()
	- A funcao le o arquivo .\teste\binary1.txt e imprime seu conteudo na tela
	- Por enquanto so le a primeira linha do arquivo

[0.1.3] ??/??/15 - Victor
* Implementou funcao getRegisterAB ()
	em desenvolvimento

[0.2.0] 04/06/15
* Criado funcao readAssembly () no filemanager.h (deprecated - em desuso)
 
[0.3.0] 05/06/15 
* Lendo linha por linha dos arquivos .txt
 
[0.3.5] 05/06/15 - Dalton
* Criado funcao getNameAssembly (no filemanager.h)
	- A funcao recebe um array de char (linha de comando Assembly) e retorna um array com a PRIMEIRA PALAVRA (os comandos: add, sub, etc)

* main.c levemente alterado
*experimentos com: const char $s0[] = "10000";   - define um array char para cada string dada.

[0.3.6] 06/06/15 - Dalton
* Criado funcao char *registerToBinary(char *registerAssembly) (no mips.h)       -- substituindo a funcao getRegisterAB ()  
	- Dado um string com o registro em assembly, ela retorna uma string com o respectivo valor em binario
	- Retorna "xxxxx" caso nao encontre nenhum dos 32 registradores MIPS
	
* Aproveitei e dei uma "limpada" em funcoes nao utilizadas no main.c e mips.h

[0.3.7] 06/05/15 - Dalton
* Nesta versao optei por uma "mudanca leve de estrategia" - Ao inves de struct, optaremos por Global Vars para os campos.
* Criado 3 funcoes que concatenam a linha de saida. concatenateR, concatenateI, concatenateJ  (todas no mips.h)
	 - Uma versao para R, i e J.
	 - Resumidamente as funcoes "juntam" os campos necessarios para dar o output.
	
[0.3.8] 07/06/15 - Dalton
* Criado funcao ripDataAssembly (no mips.h) 
	- a funcao extrai todos os registradores de uma linha
	- ainda nao extrai inteiros
	- ainda nao atribui aas variaveis globais

* Enxugado alguns conteudos de teste do main.c
		